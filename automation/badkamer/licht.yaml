# This automation is based on multiple sensors.
#
# In the shower: IKEA Tradfri motion sensor
# This sensor reports "ON" for 1 minute, then "OFF" for 30 seconds when
# detecing motion. The state "ON" is not kept when there is still
# motion going on.
# 
# Outside the shower: AQARA motion sensor
# This sensor reports "ON" as long as there is motion.

- id: badkamer_licht_A
  alias: "[BADKAMER LICHT] A. zet aan bij beweging"
  description: >
    Lamp aan als er beweging wordt gedetecteerd in de ruimte, tenzij
    de cooldown timer actief is.
  trigger:
    - entity_id: binary_sensor.badkamer_beweging
      platform: state
      to: 'on'
    - entity_id: binary_sensor.badkamer_spiegel_beweging
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: light.badkamer_plafond
      state: 'off'
    - condition: state
      entity_id: timer.badkamer_cooldown
      state: 'idle'
  action:
    - service: scene.turn_on
      data_template:
        entity_id: >
          scene.badkamer_automatisch_{{ states('sensor.periode_van_de_dag') }}
    # In the morning, the light starts dim, but is made brighter over a period
    # of a few minutes, like a wake-up light.
    - condition: state
      entity_id: sensor.periode_van_de_dag
      state: 'ochtend'
    - service: light.turn_on
      data:
        entity_id: light.badkamer_plafond
        brightness: 140
        color_temp: 440
        transition: 300


- id: badkamer_licht_B
  alias: "[BADKAMER LICHT] B. timer (her)starten bij beweging"
  description: >
    Wanneer er beweging is in de ruimte of wanneer de timer afloopt en er is
    beweging in de ruimte, (her)start dan de timer.
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.badkamer
    - entity_id: binary_sensor.badkamer_beweging
      platform: state
      to: 'on'
    - entity_id: binary_sensor.badkamer_spiegel_beweging
      platform: state
      to: 'on'
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.badkamer_spiegel_beweging
          state: 'on'
        - condition: state
          entity_id: binary_sensor.badkamer_beweging
          state: 'on'
  action:
    - service: timer.start
      data_template:
        entity_id: timer.badkamer
        duration: >
          {% if is_state("sensor.periode_van_de_dag", "avond") or
                is_state("sensor.periode_van_de_dag", "nacht") %}
            00:02:00
          {% else %}
            00:05:00
          {% endif %}


- id: badkamer_licht_C
  alias: "[BADKAMER LICHT] C. uitzetten na timeout en geen beweging"
  description: >
    Wanneer de timer afloopt, en er is geen beweging in de ruimte, maak
    dan het licht weer uit. De beweging cooldown timer wordt ook
    uitgezet, omdat we best willen dat na dit event de lampen meteen
    weer aangaan bij beweging.
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.badkamer
  condition:
    - condition: state
      entity_id: binary_sensor.badkamer_beweging
      state: 'off'
    - condition: state
      entity_id: binary_sensor.badkamer_spiegel_beweging
      state: 'off'
  action:
    - service: light.turn_off
      data:
        entity_id: light.badkamer_plafond
    - wait_template: "{{ is_state('timer.badkamer_cooldown', 'active') }}"
      timeout: 5
      continue_on_timeout: 'false'
    - service: timer.cancel
      data:
        entity_id: timer.badkamer_cooldown


- id: badkamer_licht_D
  alias: "[BADKAMER LICHT] D. cooldown activeren als het licht uitgaat"
  description: >
    Wanneer de lamp uitgaat in de badkamer, dan willen we de bewegingssensor
    even negeren, zodat eventuele beweging niet direct het licht weer aanzet.
    Denk aan het scenario waarbij je met de hand het licht uitmaakt en dan
    wegloopt (wat een beweging is, waarmee je het licht zou kunnen triggeren).
  trigger:
    - platform: state
      entity_id: light.badkamer_plafond
      to: 'off'
  action:
    - service: timer.cancel
      data:
        entity_id: timer.badkamer
    - service: timer.start
      data:
        entity_id: timer.badkamer_cooldown


- id: badkamer_licht_E
  alias: "[BADKAMER LICHT] E. cooldown deactiveren als het licht aangaat"
  description: >
    Wanneer de lamp aangaat in de badkamer, dan kan een eventuele cooldown
    timer worden gestopt. Dit is van toepassing wanneer iemand met de hand
    het licht aandoet. Ook wordt de timer gestart met een kleine waarde.
    Wanneer langer licht nodig is, dan wordt dit door de andere
    regels opgevangen.
  trigger:
    - entity_id: light.badkamer_plafond
      platform: state
      to: 'on'
  action:
    - service: timer.cancel
      data:
        entity_id: timer.badkamer_cooldown
    - service: timer.start
      data:
        entity_id: timer.badkamer
        duration: 00:03:00
